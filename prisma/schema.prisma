// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int        @id @default(autoincrement())
  email            String     @unique
  nickname         String     @unique
  password         String
  socketId         String?
  messages         Message[]
  groupes          Groupe[]   @relation("usersGroupe")
  groupesSuperUser Groupe[]   @relation("superUsersGroupe")
  Groupe           Groupe[]
  TimedOut         TimedOut[]
}

model Groupe {
  id         Int        @id @default(autoincrement())
  nom        String     @unique
  messages   Message[]
  users      User[]     @relation("usersGroupe")
  owner      User       @relation(fields: [ownerId], references: [id])
  ownerId    Int
  superUsers User[]     @relation("superUsersGroupe")
  TimedOut   TimedOut[]
}

model Message {
  id        Int    @id @default(autoincrement())
  contenu   String
  author    User   @relation(fields: [authorId], references: [id])
  authorId  Int
  groupe    Groupe @relation(fields: [groupeId], references: [id])
  groupeId  Int
  timestamp BigInt
}

model TimedOut {
  userId  Int
  groupId Int
  date    DateTime @default(now())
  reason  String
  time    String
  user    User     @relation(fields: [userId], references: [id])
  group   Groupe   @relation(fields: [groupId], references: [id])
  @@id([userId, groupId])
}
